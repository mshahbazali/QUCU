{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { FlagType, CountryCodeList } from \"./types\";\nimport Fuse from 'fuse.js';\nvar imageJsonUrl = 'https://xcarpentier.github.io/react-native-country-picker-modal/countries/';\nvar localData = {\n  emojiCountries: undefined,\n  imageCountries: undefined\n};\nexport var loadDataAsync = function (data) {\n  return function () {\n    var dataType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : FlagType.EMOJI;\n    return new Promise(function (resolve, reject) {\n      switch (dataType) {\n        case FlagType.FLAT:\n          if (!data.imageCountries) {\n            fetch(imageJsonUrl).then(function (response) {\n              return response.json();\n            }).then(function (remoteData) {\n              data.imageCountries = remoteData;\n              resolve(data.imageCountries);\n            }).catch(reject);\n          } else {\n            resolve(data.imageCountries);\n          }\n\n          break;\n\n        default:\n          if (!data.emojiCountries) {\n            data.emojiCountries = require(\"./assets/data/countries-emoji.json\");\n            resolve(data.emojiCountries);\n          } else {\n            resolve(data.emojiCountries);\n          }\n\n          break;\n      }\n    });\n  };\n}(localData);\nexport var getEmojiFlagAsync = function _callee() {\n  var countryCode,\n      countries,\n      _args = arguments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          countryCode = _args.length > 0 && _args[0] !== undefined ? _args[0] : 'FR';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n\n        case 3:\n          countries = _context.sent;\n\n          if (countries) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error('Unable to find emoji because emojiCountries is undefined');\n\n        case 6:\n          return _context.abrupt(\"return\", countries[countryCode].flag);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getImageFlagAsync = function _callee2() {\n  var countryCode,\n      countries,\n      _args2 = arguments;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          countryCode = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 'FR';\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(loadDataAsync(FlagType.FLAT));\n\n        case 3:\n          countries = _context2.sent;\n\n          if (countries) {\n            _context2.next = 6;\n            break;\n          }\n\n          throw new Error('Unable to find image because imageCountries is undefined');\n\n        case 6:\n          return _context2.abrupt(\"return\", countries[countryCode].flag);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryNameAsync = function _callee3() {\n  var countryCode,\n      translation,\n      countries,\n      _args3 = arguments;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          countryCode = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : 'FR';\n          translation = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 'common';\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n\n        case 4:\n          countries = _context3.sent;\n\n          if (countries) {\n            _context3.next = 7;\n            break;\n          }\n\n          throw new Error('Unable to find image because imageCountries is undefined');\n\n        case 7:\n          return _context3.abrupt(\"return\", countries[countryCode].name ? countries[countryCode].name[translation] : countries[countryCode].name['common']);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryCallingCodeAsync = function _callee4(countryCode) {\n  var countries;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n\n        case 2:\n          countries = _context4.sent;\n\n          if (countries) {\n            _context4.next = 5;\n            break;\n          }\n\n          throw new Error('Unable to find image because imageCountries is undefined');\n\n        case 5:\n          return _context4.abrupt(\"return\", countries[countryCode].callingCode[0]);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getCountryCurrencyAsync = function _callee5(countryCode) {\n  var countries;\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(loadDataAsync());\n\n        case 2:\n          countries = _context5.sent;\n\n          if (countries) {\n            _context5.next = 5;\n            break;\n          }\n\n          throw new Error('Unable to find image because imageCountries is undefined');\n\n        case 5:\n          return _context5.abrupt(\"return\", countries[countryCode].currency[0]);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar isCountryPresent = function isCountryPresent(countries) {\n  return function (countryCode) {\n    return !!countries[countryCode];\n  };\n};\n\nvar isRegion = function isRegion(region) {\n  return function (country) {\n    return region ? country.region === region : true;\n  };\n};\n\nvar isSubregion = function isSubregion(subregion) {\n  return function (country) {\n    return subregion ? country.subregion === subregion : true;\n  };\n};\n\nvar isIncluded = function isIncluded(countryCodes) {\n  return function (country) {\n    return countryCodes && countryCodes.length > 0 ? countryCodes.includes(country.cca2) : true;\n  };\n};\n\nvar isExcluded = function isExcluded(excludeCountries) {\n  return function (country) {\n    return excludeCountries && excludeCountries.length > 0 ? !excludeCountries.includes(country.cca2) : true;\n  };\n};\n\nexport var getCountriesAsync = function _callee6(flagType) {\n  var translation,\n      region,\n      subregion,\n      countryCodes,\n      excludeCountries,\n      preferredCountries,\n      withAlphaFilter,\n      countriesRaw,\n      newCountryCodeList,\n      countries,\n      _countries,\n      _args6 = arguments;\n\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          translation = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : 'common';\n          region = _args6.length > 2 ? _args6[2] : undefined;\n          subregion = _args6.length > 3 ? _args6[3] : undefined;\n          countryCodes = _args6.length > 4 ? _args6[4] : undefined;\n          excludeCountries = _args6.length > 5 ? _args6[5] : undefined;\n          preferredCountries = _args6.length > 6 ? _args6[6] : undefined;\n          withAlphaFilter = _args6.length > 7 ? _args6[7] : undefined;\n          _context6.next = 9;\n          return _regeneratorRuntime.awrap(loadDataAsync(flagType));\n\n        case 9:\n          countriesRaw = _context6.sent;\n\n          if (countriesRaw) {\n            _context6.next = 12;\n            break;\n          }\n\n          return _context6.abrupt(\"return\", []);\n\n        case 12:\n          if (!(preferredCountries && !withAlphaFilter)) {\n            _context6.next = 18;\n            break;\n          }\n\n          newCountryCodeList = [].concat(_toConsumableArray(preferredCountries), _toConsumableArray(CountryCodeList.filter(function (code) {\n            return !preferredCountries.includes(code);\n          })));\n          countries = newCountryCodeList.filter(isCountryPresent(countriesRaw)).map(function (cca2) {\n            return _objectSpread({\n              cca2: cca2\n            }, _objectSpread(_objectSpread({}, countriesRaw[cca2]), {}, {\n              name: countriesRaw[cca2].name[translation] || countriesRaw[cca2].name['common']\n            }));\n          }).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries));\n          return _context6.abrupt(\"return\", countries);\n\n        case 18:\n          _countries = CountryCodeList.filter(isCountryPresent(countriesRaw)).map(function (cca2) {\n            return _objectSpread({\n              cca2: cca2\n            }, _objectSpread(_objectSpread({}, countriesRaw[cca2]), {}, {\n              name: countriesRaw[cca2].name[translation] || countriesRaw[cca2].name['common']\n            }));\n          }).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries)).sort(function (country1, country2) {\n            return country1.name.localeCompare(country2.name);\n          });\n          return _context6.abrupt(\"return\", _countries);\n\n        case 20:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nvar DEFAULT_FUSE_OPTION = {\n  shouldSort: true,\n  threshold: 0.3,\n  location: 0,\n  distance: 100,\n  maxPatternLength: 32,\n  minMatchCharLength: 1,\n  keys: ['name', 'cca2', 'callingCode']\n};\nvar fuse;\nexport var search = function search() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_FUSE_OPTION;\n\n  if (data.length === 0) {\n    return [];\n  }\n\n  if (!fuse) {\n    fuse = new Fuse(data, options);\n  }\n\n  if (filter && filter !== '') {\n    var result = fuse.search(filter);\n    return result;\n  } else {\n    return data;\n  }\n};\n\nvar uniq = function uniq(arr) {\n  return Array.from(new Set(arr));\n};\n\nexport var getLetters = function getLetters(countries) {\n  return uniq(countries.map(function (country) {\n    return country.name.substr(0, 1).toLocaleUpperCase();\n  }).sort(function (l1, l2) {\n    return l1.localeCompare(l2);\n  }));\n};\nexport var getCountryInfoAsync = function _callee7(_ref) {\n  var countryCode, translation, countryName, currency, callingCode;\n  return _regeneratorRuntime.async(function _callee7$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          countryCode = _ref.countryCode, translation = _ref.translation;\n          _context7.next = 3;\n          return _regeneratorRuntime.awrap(getCountryNameAsync(countryCode, translation || 'common'));\n\n        case 3:\n          countryName = _context7.sent;\n          _context7.next = 6;\n          return _regeneratorRuntime.awrap(getCountryCurrencyAsync(countryCode));\n\n        case 6:\n          currency = _context7.sent;\n          _context7.next = 9;\n          return _regeneratorRuntime.awrap(getCountryCallingCodeAsync(countryCode));\n\n        case 9:\n          callingCode = _context7.sent;\n          return _context7.abrupt(\"return\", {\n            countryName: countryName,\n            currency: currency,\n            callingCode: callingCode\n          });\n\n        case 11:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"mappings":"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","names":["FlagType","CountryCodeList","Fuse","imageJsonUrl","localData","emojiCountries","undefined","imageCountries","loadDataAsync","data","dataType","EMOJI","Promise","resolve","reject","FLAT","fetch","then","response","json","remoteData","catch","require","getEmojiFlagAsync","countryCode","countries","Error","flag","getImageFlagAsync","getCountryNameAsync","translation","name","getCountryCallingCodeAsync","callingCode","getCountryCurrencyAsync","currency","isCountryPresent","isRegion","region","country","isSubregion","subregion","isIncluded","countryCodes","length","includes","cca2","isExcluded","excludeCountries","getCountriesAsync","flagType","preferredCountries","withAlphaFilter","countriesRaw","newCountryCodeList","filter","code","map","sort","country1","country2","localeCompare","DEFAULT_FUSE_OPTION","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","fuse","search","options","result","uniq","arr","Array","from","Set","getLetters","substr","toLocaleUpperCase","l1","l2","getCountryInfoAsync","countryName"],"sourceRoot":"","sources":["../src/CountryService.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}