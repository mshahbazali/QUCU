{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { api } from \"../../../Config/Api\";\nimport { useSelector } from 'react-redux';\nimport Toast from 'react-native-root-toast';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Index(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordInput = _useState2[0],\n      setPasswordInput = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmPasswordInput = _useState4[0],\n      setConfirmPasswordInput = _useState4[1];\n\n  var _useState5 = useState(undefined),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(undefined),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordError = _useState10[0],\n      setPasswordError = _useState10[1];\n\n  var _useState11 = useState(undefined),\n      _useState12 = _slicedToArray(_useState11, 2),\n      confirmPasswordError = _useState12[0],\n      setConfirmPasswordError = _useState12[1];\n\n  var state = useSelector(function (state) {\n    return state;\n  });\n\n  var resetPassword = function resetPassword() {\n    if (password == confirmPassword) {\n      axios.post(api + \"/auth/resetpassword\", {\n        id: state.id,\n        password: password\n      }).then(function (response) {\n        var toast = Toast.show(\"\" + response.data.message, {\n          duration: Toast.durations.LONG,\n          position: Toast.positions.TOP,\n          shadow: true,\n          animation: true,\n          hideOnPress: true,\n          delay: 0\n        });\n        setTimeout(function () {\n          Toast.hide(toast);\n        }, 10000);\n        navigation.navigate(\"Login\");\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } else {\n      setConfirmPasswordError(true);\n    }\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      children: [_jsx(View, {\n        style: styles.logoContainer,\n        children: _jsx(Image, {\n          source: require(\"../../../Assests/Images/logo.png\"),\n          style: styles.logo\n        })\n      }), _jsxs(View, {\n        style: {\n          paddingHorizontal: 20\n        },\n        children: [_jsxs(View, {\n          style: {\n            marginTop: 20\n          },\n          children: [_jsx(Text, {\n            style: {\n              color: \"#fff\",\n              marginBottom: 5\n            },\n            children: \"Enter New Password\"\n          }), _jsx(TextInput, {\n            keyboardType: \"default\",\n            onChangeText: function onChangeText(text) {\n              return setPassword(text);\n            },\n            onFocus: function onFocus() {\n              setPasswordInput(true);\n              setPasswordError(undefined);\n            },\n            placeholder: \"New Passwoerd\",\n            placeholderTextColor: \"#2D344B\",\n            style: {\n              borderBottomColor: passwordError !== undefined ? \"red\" : passwordInput == false ? \"#323232\" : \"#175676\",\n              borderBottomWidth: 2,\n              color: \"#fff\",\n              fontWeight: \"600\",\n              paddingBottom: 10,\n              fontSize: 15\n            }\n          }), _jsx(Text, {\n            style: {\n              color: \"red\",\n              marginTop: 5,\n              display: passwordError == undefined ? \"none\" : \"flex\"\n            },\n            children: \"Please Enter Valid Password\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            marginTop: 40\n          },\n          children: [_jsx(Text, {\n            style: {\n              color: \"#fff\",\n              marginBottom: 5\n            },\n            children: \"Enter Confirm Password\"\n          }), _jsx(TextInput, {\n            keyboardType: \"default\",\n            onChangeText: function onChangeText(text) {\n              return setConfirmPassword(text);\n            },\n            onFocus: function onFocus() {\n              setConfirmPasswordInput(true);\n              setConfirmPasswordError(undefined);\n            },\n            placeholder: \"Confirm Password\",\n            placeholderTextColor: \"#2D344B\",\n            style: {\n              borderBottomColor: confirmPasswordError !== undefined ? \"red\" : confirmPasswordInput == false ? \"#323232\" : \"#175676\",\n              borderBottomWidth: 2,\n              color: \"#fff\",\n              fontWeight: \"600\",\n              paddingBottom: 10,\n              fontSize: 15\n            }\n          }), _jsx(Text, {\n            style: {\n              color: \"red\",\n              marginTop: 5,\n              display: confirmPasswordError == undefined ? \"none\" : \"flex\"\n            },\n            children: \"Please Enter Valid Confirm Password\"\n          })]\n        }), _jsx(View, {\n          style: {\n            marginTop: 70\n          },\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              password === undefined ? setPasswordError(true) : null;\n              confirmPassword === undefined ? setConfirmPasswordError(true) : null;\n              password === undefined || confirmPassword === undefined ? null : resetPassword();\n            },\n            style: {\n              backgroundColor: password === undefined || confirmPassword === undefined ? '#21283F' : \"#175676\",\n              paddingVertical: 10,\n              borderRadius: 10\n            },\n            children: _jsx(Text, {\n              style: {\n                textAlign: 'center',\n                color: \"#fff\",\n                fontSize: 22,\n                fontWeight: '400'\n              },\n              children: \"Send\"\n            })\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#141927\",\n    flex: 1\n  },\n  logoContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  logo: {\n    width: 340,\n    height: 340\n  },\n  loginTextContainer: {\n    marginTop: 50,\n    marginBottom: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginText: {\n    color: \"#fff\",\n    textDecorationLine: \"underline\",\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","useState","useRef","axios","api","useSelector","Toast","Index","navigation","passwordInput","setPasswordInput","confirmPasswordInput","setConfirmPasswordInput","undefined","password","setPassword","confirmPassword","setConfirmPassword","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","state","resetPassword","post","id","then","response","toast","show","data","message","duration","durations","LONG","position","positions","TOP","shadow","animation","hideOnPress","delay","setTimeout","hide","navigate","catch","err","console","log","styles","container","logoContainer","require","logo","paddingHorizontal","marginTop","color","marginBottom","text","borderBottomColor","borderBottomWidth","fontWeight","paddingBottom","fontSize","display","backgroundColor","paddingVertical","borderRadius","textAlign","StyleSheet","create","flex","justifyContent","alignItems","width","height","loginTextContainer","loginText","textDecorationLine"],"sources":["E:/Application Development/QUCU/src/Screen/Authentication/ResetPassword/index.js"],"sourcesContent":["import { View, StyleSheet, ScrollView, Image, TouchableOpacity, TextInput, Text } from 'react-native'\r\nimport React, { useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { api } from '../../../Config/Api'\r\nimport { useSelector } from 'react-redux'\r\nimport Toast from 'react-native-root-toast';\r\n\r\nexport default function Index({ navigation }) {\r\n    const [passwordInput, setPasswordInput] = useState(false)\r\n    const [confirmPasswordInput, setConfirmPasswordInput] = useState(false)\r\n    const [password, setPassword] = useState(undefined)\r\n    const [confirmPassword, setConfirmPassword] = useState(undefined)\r\n    const [passwordError, setPasswordError] = useState(undefined)\r\n    const [confirmPasswordError, setConfirmPasswordError] = useState(undefined)\r\n    const state = useSelector(state => state)\r\n    const resetPassword = () => {\r\n        if (password == confirmPassword) {\r\n            axios.post(`${api}/auth/resetpassword`, { id: state.id, password: password }).then((response) => {\r\n                let toast = Toast.show(`${response.data.message}`, {\r\n                    duration: Toast.durations.LONG,\r\n                    position: Toast.positions.TOP,\r\n                    shadow: true,\r\n                    animation: true,\r\n                    hideOnPress: true,\r\n                    delay: 0,\r\n                });\r\n                setTimeout(function () {\r\n                    Toast.hide(toast);\r\n                }, 10000);\r\n                navigation.navigate(\"Login\")\r\n            })\r\n                .catch((err) => { console.log(err); })\r\n        }\r\n        else {\r\n            setConfirmPasswordError(true)\r\n        }\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <ScrollView>\r\n                <View style={styles.logoContainer}>\r\n                    <Image source={require(\"../../../Assests/Images/logo.png\")} style={styles.logo} />\r\n                </View>\r\n                <View style={{ paddingHorizontal: 20 }}>\r\n                    <View style={{ marginTop: 20 }}>\r\n                        <Text style={{ color: \"#fff\", marginBottom: 5 }}>Enter New Password</Text>\r\n                        <TextInput keyboardType='default' onChangeText={(text) => setPassword(text)} onFocus={() => {\r\n                            setPasswordInput(true)\r\n                            setPasswordError(undefined)\r\n                        }} placeholder=\"New Passwoerd\" placeholderTextColor={\"#2D344B\"} style={{ borderBottomColor: passwordError !== undefined ? \"red\" : passwordInput == false ? \"#323232\" : \"#175676\", borderBottomWidth: 2, color: \"#fff\", fontWeight: \"600\", paddingBottom: 10, fontSize: 15 }} />\r\n                        <Text style={{ color: \"red\", marginTop: 5, display: passwordError == undefined ? \"none\" : \"flex\" }}>Please Enter Valid Password</Text>\r\n                    </View>\r\n                    <View style={{ marginTop: 40 }}>\r\n                        <Text style={{ color: \"#fff\", marginBottom: 5 }}>Enter Confirm Password</Text>\r\n                        <TextInput keyboardType='default' onChangeText={(text) => setConfirmPassword(text)} onFocus={() => {\r\n                            setConfirmPasswordInput(true)\r\n                            setConfirmPasswordError(undefined)\r\n                        }} placeholder=\"Confirm Password\" placeholderTextColor={\"#2D344B\"} style={{ borderBottomColor: confirmPasswordError !== undefined ? \"red\" : confirmPasswordInput == false ? \"#323232\" : \"#175676\", borderBottomWidth: 2, color: \"#fff\", fontWeight: \"600\", paddingBottom: 10, fontSize: 15 }} />\r\n                        <Text style={{ color: \"red\", marginTop: 5, display: confirmPasswordError == undefined ? \"none\" : \"flex\" }}>Please Enter Valid Confirm Password</Text>\r\n                    </View>\r\n                    <View style={{ marginTop: 70 }}>\r\n                        <TouchableOpacity onPress={() => {\r\n                            password === undefined ? setPasswordError(true) : null\r\n                            confirmPassword === undefined ? setConfirmPasswordError(true) : null\r\n                            password === undefined || confirmPassword === undefined ? null : resetPassword()\r\n                        }} style={{ backgroundColor: password === undefined || confirmPassword === undefined ? '#21283F' : \"#175676\", paddingVertical: 10, borderRadius: 10 }}>\r\n                            <Text style={{ textAlign: 'center', color: \"#fff\", fontSize: 22, fontWeight: '400' }}>Send</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </View >\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: \"#141927\",\r\n        flex: 1\r\n    },\r\n    logoContainer: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginTop: 10,\r\n    },\r\n    logo: {\r\n        width: 340,\r\n        height: 340\r\n    },\r\n    loginTextContainer: {\r\n        marginTop: 50,\r\n        marginBottom: 10,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    loginText: {\r\n        color: \"#fff\",\r\n        textDecorationLine: \"underline\",\r\n        fontSize: 20\r\n    },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}